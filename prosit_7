//////////////////////////////////////////////////////////////////////////////////////////////////
String nom_agent = "ABCDEFHIJKLMNOPQ"; // lettres des agents
int cle_public[16] = {601,619,631,641,647,653,661,673,691,701,733,739,751,797,809,811}; // cle public des agents
int e, M, Mp, C; // variable du logigramme
int var_test_input_1, var_test_input_2 ; // variable de suivi pour verifier les entrees
String x; // variable qui stock la lettre de l'agent
//////////////////////////////////////////////////////////////////////////////////////////////////
void setup()
{
  Serial.begin(9600);
  Serial.println("Identifiez-vous :");
  randomSeed(analogRead(0)); // variable aleatoire
}
//////////////////////////////////////////////////////////////////////////////////////////////////
void loop(){
  if (Serial.available() && var_test_input_1 == 0){ // reception de la lettre de l'agent
  	x = Serial.readString();
  	e = CleAgent(x); // je recupere la cle de l'agent en fonction de sa lettre
  	var_test_input_1 = 1; // pour pas que la fonction se relance
  	M = random(2881); // definition de M
  	C = Chiffrer(M, e); // definition du message a dechiffrer   
  	Serial.println("Message a dechiffrer : (veuillez l'entree sur votre app avec votre cle prive)");
  	Serial.println(C);
  	Serial.println("Entrez le message :"); // tentative de l'utilisateur apres avoir utiliser son app
  }
  	if (Serial.available() && var_test_input_2 == 0 && var_test_input_1 == 1){ //  verification code tente
  		var_test_input_2 = 1;
  		Mp = Serial.parseInt();
      
  	if (M==Mp){
    	Serial.println("Vous etes authentifie ! Bienvenue agent ");
    	Serial.print(x);
    }
    else {
      Serial.println("Erreur d authentification, le systeme de sécutité se declenchera dans 5 secondes");
    }
  }
}
//////////////////////////////////////////////////////////////////////////////////////////////////
int Chiffrer(int M, int e){ // chiffre le message
  int n;
  int C;
  n = 43 * 67;
  C = Modexp(M,e,n);
  return C;
}
//////////////////////////////////////////////////////////////////////////////////////////////////
int CleAgent(String lettre){// va chercher la cle public en focntion de la letre de l agent
  for (int i = 0; i <= 16; i++) {
    if (String(nom_agent[i]) == lettre){
      return cle_public[i];
    }
  }}
//////////////////////////////////////////////////////////////////////////////////////////////////
int Modexp(float a, int e, float n){
  float r;
  if (e<0){
    Serial.println("unhandledd case");
    exit(1);
  }
  else if ((a==0)||(n==1)){
    r = 0;
  }
  else {  
    r = 1;
    while (e>0){
      r = fmod((r*fmod(a,n)),n);  //((r*(a%n))%n) ;
      e=e-1;
    }
  }
  return r;
}
//////////////////////////////////////////////////////////////////////////////////////////////////
